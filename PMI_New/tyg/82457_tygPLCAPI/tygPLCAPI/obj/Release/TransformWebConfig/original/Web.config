<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="tygPLCAPI.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings/>
  <connectionStrings>
    <add name="MSSQLConnection" connectionString="Data Source=172.17.3.106;Initial Catalog=PMI;Persist Security Info=True;User ID=pmi;Password=pmidb!" providerName="System.Data.SqlClient"/>
    <!-- <add name="MSSQLConnection" connectionString="Data Source=WEBAP03\SQLEXPRESS;Initial Catalog=tyg;Persist Security Info=True;User ID=tyg;Password=tygplc" providerName="System.Data.SqlClient"/> -->
    <add name="OracleConnection" connectionString="Data Source=//172.17.3.137:1521/erp9.tyg.com.tw;Persist Security Info=True;User ID=POCAD;Password=TEAAB7121973;Unicode=True" providerName="System.Data.OracleClient"/>
  </connectionStrings>
  <!--
    如需 web.config 變更的說明，請參閱 http://go.microsoft.com/fwlink/?LinkId=235367。

    您可以在 <httpRuntime> 標記上設定下列屬性。
      <system.Web>
        <httpRuntime targetFramework="4.5.2" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.5.2"/>
    <!--
      <authentication> 區段可讓您設定
      ASP.NET 用來識別連入使用者的 
      安全性驗證模式。 
    -->
    <authentication mode="Windows"/>
    <!--
       <customErrors> 區段可讓您設定
       當執行要求期間發生無法處理
       之錯誤時的處理方式。更明確地說，
       開發人員可以利用它設定要顯示的 
       html 錯誤頁面，以取代錯誤堆疊追蹤。

       <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
         <error statusCode="403" redirect="NoAccess.htm" />
         <error statusCode="404" redirect="FileNotFound.htm" />
       </customErrors>
    -->
    <httpHandlers>
      <add verb="GET,HEAD,POST,OPTIONS" path="*.aspx" type="System.Web.UI.PageHandlerFactory"/>
    </httpHandlers>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <!-- 
        在 Internet Information Services 7.0 下，需要有 system.webServer 區段才能執行
        ASP.NET AJAX。在舊版 IIS 下則不需要。
    -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*"/>
        <add name="Access-Control-Allow-Headers" value="Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"/>
        <add name="Access-Control-Allow-Methods" value="GET,POST,PUT,DELETE,OPTIONS"/>
        <add name="Access-Control-Allow-Credentials" value="true"/>
      </customHeaders>
    </httpProtocol>
  </system.webServer>
  <system.serviceModel>
    <bindings />
    <client />
  </system.serviceModel>
  <applicationSettings>
    <tygPLCAPI.Properties.Settings>
      <setting name="tygPLCAPI_HoleDetectServiceReference_HoleDetectService"
        serializeAs="String">
        <value>http://172.17.3.85:9999/HoleDetectService.asmx</value>
      </setting>
    </tygPLCAPI.Properties.Settings>
  </applicationSettings>
</configuration>